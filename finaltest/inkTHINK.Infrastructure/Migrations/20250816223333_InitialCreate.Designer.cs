// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inkTHINK.Infrastructure.Data;

#nullable disable

namespace inkTHINK.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816223333_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("inkTHINK.Domain.Entities.Calculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContribuyenteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReglasVersionadas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestSnapshot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultSnapshot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContribuyenteId");

                    b.ToTable("Calculos");
                });

            modelBuilder.Entity("inkTHINK.Domain.Entities.Contribuyente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regimen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contribuyentes");
                });

            modelBuilder.Entity("inkTHINK.Domain.Entities.TaxRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ParamsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VigenteDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenteHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaxRules");
                });

            modelBuilder.Entity("inkTHINK.Domain.Entities.Calculo", b =>
                {
                    b.HasOne("inkTHINK.Domain.Entities.Contribuyente", "Contribuyente")
                        .WithMany()
                        .HasForeignKey("ContribuyenteId");

                    b.Navigation("Contribuyente");
                });
#pragma warning restore 612, 618
        }
    }
}
